[
  {
    "objectID": "modelling.html",
    "href": "modelling.html",
    "title": "CODAP for Australians",
    "section": "",
    "text": "Modelling is a vast topic. There are many forms of mathematical modelling: we make systems models, conceptual models, and probability models; we construct simulations to model phenomena. The list goes on.\nRight now, let’s look at another kind of model central to school mathematics: using a mathematical function to approximate data from some phenomenon.\n\nHere’s what we do:\n\nReach into a container of glass beads and pull out a few, up to about 20.\nCount the beads and record the number.\nPut the beads in a bowl and weigh them. 1\nEnter the count and the weight into a CODAP table.\nPut the beads back, mix, and repeat.\n\nThen, of course, we will plot the data (what goes on the horizontal axis??) and try to find a function that fits the data.\nYou already know how to make a graph. To make a line, go to the ruler palette of the graph and choose Movable Line. Drag its handles to approximate the data. Notice how the slope-intercept form of the line appears and updates as you drag.\n\n\n\nA situation like this leads to some great questions such as:\n\nSuppose we put 100 beads in the bowl. How much would that weigh?\nSuppose the bowl with the beads weighed 1 kg. How many beads would that be?\nIn the formula you got, what number is the slope?\nWhat does that slope mean?\nSame for the intercept…\n\nThese lead to more subtle and statistical questions…\n\n\n\n\n\nOne possible line\n\n\n\nWhy don’t the points line up perfectly?\nRemember that number you got for 1 kg of beads? How precise is that? What range of numbers do you think you would typically get?\nLooking at the formula in the figure, do you think it’s possible that the true formula is weight = 2 * count + 100?\n\n\n\nFunctional form. We deliberately used a linear example, but you can go deeper. That ruler palette has a Plotted Function option, and you can use sliders (from the toolbar) to make variable parameters.\nData sources. Here we used measurement data, which has built-in variability. That’s great, but it’s not the only way. Imagine one of those pattern problems where you count squares or triangles or dots. You could enter those numbers as data and plot them to find the (in this case, quadratic) function:\n\n\n\n\n\n\nA quadratic model using the Plotted Function feature\n\n\nBest fit. The ruler palette will let you make a least-squares line. Before you do that, however consider: the least-squares line is not all that much better than what students will come up with using the movable line. Furthermore, think of what students might gain by moving those handles and seeing the formula change."
  },
  {
    "objectID": "probability.html",
    "href": "probability.html",
    "title": "CODAP for Australians",
    "section": "",
    "text": "On the Modelling page, we used a function to approximate some measurements. Let’s look at another kind of model, a simulation that includes randomness.\nWe will model a process, in this case, the experience of playing roulette. To simplify things, we will always bet $1 on red. If red comes up, we get our $1 back plus $1 more. If it does not come up, we lose our $1.\n\n\n\nNow: on our roulette wheel, there are 38 slots, of which 18—less than half—are red. So even before we simulate, we admit that the “house” has an advantage. We could even compute the expected value of a single play, which will be less than zero.\nBut the expected value is not our question today. We want to know our chances of coming out ahead if we play 50 times. To figure that out theoretically is a bit more complicated than we want to tackle, so we’ll use the computer to play the game many times and record the results.\nWe will use a CODAP “plugin” called the Binomial Simulator. When you first load it, it looks like the one in the live example below. As you can see, it’s set up to do a coin experiment.\nThe cool thing in this plugin is that it’s all about the language. We will change the words (and some of the numbers) so that the paragraph at the top reads the way we want it. The we will press Engage! and CODAP will run the simulation.\nThe paragraph we want is this:\n\n\n\n\n\nChange the text and numbers in the simulator so that your paragraph matches that one.\nThen press Engage!. A CODAP table will appear with the number of red and the number of not red for each of the 100 sessions you simulated.\n\n\n\nWe want to know how much we won. That is the quantity red - not red. Let’s make a new column to calculate it.\nIn the upper right of the table, there is a gray circle with a plus sign. Click that to make a new column.\n\n\n\nFirst, you’ll give it a name; let’s call it net.\nThen click on the (underlined) name net to get a menu. Choose Edit Formula.\nIn the box, type red and a minus sign and then start typing not. CODAP will give you “not red” as an option; take it. You’ll see that (because of the space) CODAP surrounds the name 'not red' with ticks.\n\n\n\n\n\nAfter you click Apply, the net column fills with numbers: the net winnings during each session.\nGraph net. How many times (out of 100) is your value for net greater than zero?\nI don’t want to count them either. Here’s what to do:\n\nIn the ruler palette, click Movable Value and choose Add. A line appears that you can move back and forth.\nNow go back to the ruler palette and choose Count. Aha! Now you can see how many are on each side of the line. Position it just above zero to get the answer. We had 35 winners out of 100 sessions:\n\n\n\n\n\n\nOf course, different students will get different results, but two things should be clear:\n\nIf we imagine that this represents 100 gamblers, fewer than half of them come out ahead.\nBy the same token, quite a few of them do. And they will be the ones that tell their friends how great it was to go gambling.\n\n\n\nEven Results. All values of net are even. Why?\nWhy Binomial? We’re using the Binomial Simulator because this particular situation is in fact binomial: the probability of winning each spin (18/38) is constant, and is independent of the success or failure of any other spin of the wheel.\nPlenty of other problems are not binomial (for example, the probability of drawing three aces in five cards) and they require different simulation tools.\nA lot of problems are binomial, though, so using this Binomial Simulator gives you an interesting, relatively simple entry into simulation. Want to see other binomial problems? Check out this chapter in the online book, Awash in Data.\nExpected Value. The expected value for one spin will be\n\\[E = \\frac{18}{38} - \\frac{20}{38} \\approx -0.053\\]\nThat is, on average, you lose five cents on every spin of the wheel.\nThis also means that the expected value for 50 spins is about –2.6. That should also be (roughly) the mean of your distribution for net—and it should get closer if you increase the sample size.\nThat said, your graph should show clearly that not very many players lose exactly $2.00. That is, you shouldn’t expect the expected value. This is an important statistical lesson about variability!\nPsychology of Gambling. It’s an interesting question whether we in school should avoid problems that involve gambling. One strategy is to do what we do here: present information that might help serve to inoculate students.\nIn a more sophisticated simulation, students could ask, what fraction of all players were ever ahead during their 50 spins? That turns out to be more than half, which might lead even more people to have a positive, “I almost won” feeling about their trip to the casino.\nBut of course, the house always comes out ahead."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CODAP for Australians",
    "section": "",
    "text": "Version 9.0 of the Australian Curriculum is an exciting document. The Mathematics and Digital Technology sections open doors for Australian teachers, suggesting new directions and possiblities.\nThe new-ish bits are often related to technology and/or data. Computers – or computational thinking – are taking a more prominent role in society and, correspondingly, in mathematics education. And the prominence of data in today’s world leads us to continue to emphasize statistics and probability as important parts of every student’s maths upbringing.\nMaking that work in the classroom requires flexible (and inexpensive) tools.\nThis booklet introduces the Common Online Data Analysis Platform (CODAP), an open-source, web-based tool designed for schools. And it’s free. You (or your students) don’t even need to sign up to use it.\nCODAP has many, many capabilities. This document will only get you started. We will look at five different possible uses of CODAP, matching some of the topics in Version Nine. We will not pretend that these are classroom-ready lessons, but they might whet your appetite for more, and encourage you to find – and create! – lessons you can use as you move forward.\nBut first, the basic basics.\nWe have created a live example below. In it, you can use CODAP right on this page.\nScroll down and look. The document has a table in it with data about the 1309 passengers aboard the HMS Titanic. Suppose we wanted to investigate whether males or females were more likely to have survived.\nLet’s make a graph and see.\n\n\n\n\n\nThe CODAP graph tool\n\n\n\nClick the Graph tool on the toolbar.\n\nA graph appears. The points are randomly distributed. We’ll organize them by doing what we always tell students: “label your axes.” In this case, the “label” is the column heading.\n\nDrag the column heading gender to the horizontal axis of the graph.\n\nThe points organize themselves into two columns, one for males, one for females. Let’s see who lived through the disaster…\n\nDrag survived over the graph and “plop” it in the middle.\n\nThe points color by who survived.\n\n\n\nIt should be clear that, in general, females had a better chance of surviving.\nQuestions should emerge of the form, “how do I…?” or “Can I…?”, for example,\n\n\n\n\n\nDots fused into bars!\n\n\n\nCan I see counts and percentages?1\nHow do I make bar graphs out of those dots?2\nHow do I put my own data into CODAP?3\n\nThese and other questions are for another time and place. For now, CODAP has online help (there is a button in the upper right), and that’s a good place to start.\nI hope that your imagination is already leaping ahead, thinking about what else this short experience makes possible, noting that it’s now easy for students to make graphs with over 1300 points and see patterns in the data.\nMore importantly, think about what other questions students can address as they explore, and what other ways you might connect mathematics through data. The side headings on the left lead you to some brief ideas."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Draft! Prepared for Katie Makar and Barry Kissane by Tim Erickson.\nI used quarto."
  },
  {
    "objectID": "stats.html",
    "href": "stats.html",
    "title": "CODAP for Australians",
    "section": "",
    "text": "CODAP is a data analysis platform, so we expect it to help with statitical investigations. Here is a relatively simple example.\nSuppose we’re interested in gender differences in height, and remember that at about ages 10–12, girls are generally taller than boys.\nIs that really true?\nWe collect data on some ten-year-olds and plot the results, as you can see in the graph in the live example below. The blue lines are the mean heights of the groups; you can “hover” over the lines to see the values.\nWe have also calculated the difference of means in the left-hand column, diffMean: in this sample, the mean height for the girls is 3.66 cm greater than the mean height for boys.\n\n\n\nOf course, your students could make that graph themselves, and maybe draw the obvious conclusion: we were right, at age 10, girls are taller. And we should admit that, with 51 cases, making the graph and doing the calculation by hand would be tedious and error-prone.\nBut what else can students get out of using CODAP for this task? Here are some simple ideas:\n\n\n\n\nIf the data are from their own school, they can find themselves (or the memory of themselves) in the graph.\nThey can go to the ruler palette and make box plots, and compare those to the means1.\nThey can see and explore the overlap in the distributions and learn to interpret that overlap, for example, that despite the trend, there are a lot of short girls and tall boys.\nThey can investigate other relationships by making other graphs, for example, Height against UpperArm2.\n\nAll of that lives in the realm of exploratory data analysis.\nMore advanced students can explore whether the difference we see could plausibly be due to chance. Although we could do a formal \\(t\\)-test…\n\n\n\n\n\n\nA formal \\(t\\)-test (click to expand)\n\n\n\n\n\n\n\n\n\n…many stats educators are turning instead to randomization-based inference.\nFeeling brave? Try this:\n\nOpen the scrambler item by clicking the minus-sign that appears when you hover over it. We have already set it up for you.\nClick the 10x button. A new table appears, with “scrambled” values for the difference of means, diffMean. Graph those values.\n\n\nThese are values for the difference of means (female minus male) when we have scrambled the values for Gender and thereby removed any association between Gender and Height.3 The question is, is our true test statistic of 3.66 “plausible” in this case? Does it occur very often among scrambled datasets? Our graph of 10 scrambles, above, doesn’t show any cases that extreme—but we only have ten!\nHere’s what ours looked like after 400 scrambles; we have also gone to the ruler palette to add two movable values and to ask CODAP to show the counts and percentages:\n\n\n\nresults from 400 scrambles.\n\n\nNow we need to decide: is this a one-tailed or two-tailed situation? And do we consider 3% (or 6%) rare enough to be implausible?\nA takeaway, we hope, is that CODAP gives you a tool and an environment that can serve students from the very first bit of EDA all the way through formal inference."
  }
]